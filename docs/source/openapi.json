{"openapi":"3.0.2","info":{"title":"cloudmesh-cc","version":"4.3.6"},"paths":{"/workflows":{"get":{"tags":["workflow"],"summary":"List Workflows","description":"This command returns a list of workflows that is found within\nthe server.\ncurl -X 'GET'         'http://127.0.0.1:8000/workflows'         -H 'accept: application/json'\n:return: list of workflow names","operationId":"list_workflows_workflows_get","parameters":[{"required":false,"schema":{"title":"Output","type":"string"},"name":"output","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/workflow/upload":{"post":{"tags":["workflow"],"summary":"Upload","description":"upload a workflow to the ~/.cloudmesh/workflow directory for running\nor editing.\n:param directory: path to directory with workflow files\n:type directory: str\ncurl -X 'POST'         'http://127.0.0.1:8000/workflow/upload?directory=~/cm/cloudmesh-cc/tests/workflow-example'         -H 'accept: application/json'         -d ''\n:param archive: tgz, xz, tar.gz, or tar file with workflow files\n:type archive: str\ncurl -X 'POST'         'http://127.0.0.1:8000/workflow/upload?archive=ThePathToYourArchiveFile'         -H 'accept: application/json'         -d ''\n:param yaml: yaml file with workflow specifications\n:type yaml: str\ncurl -X 'POST'         'http://127.0.0.1:8000/upload?yaml=~/cm/cloudmesh-cc/tests/workflow-example/workflow-example.yaml'         -H 'accept: application/json'         -d ''\n:return: success or failure message","operationId":"upload_upload_post","parameters":[{"description":"path to workflow dir that contains scripts and yaml file","required":false,"schema":{"title":"Directory","type":"string","description":"path to workflow dir that contains scripts and yaml file"},"name":"directory","in":"query"},{"description":"path to archive file that can be tgx, xz, tar.gz, or tar","required":false,"schema":{"title":"Archive","type":"string","description":"path to archive file that can be tgx, xz, tar.gz, or tar"},"name":"archive","in":"query"},{"description":"path to yaml file for workflow","required":false,"schema":{"title":"Yaml","type":"string","description":"path to yaml file for workflow"},"name":"yaml","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/workflow/{name}":{"get":{"tags":["workflow"],"summary":"Get Workflow","description":"retrieves a job in a workflow, if specified. if not specified,\nretrieves an entire workflow\n\nyou need to have first uploaded the workflow-example for this curl to work!\ncurl -X 'GET'         'http://127.0.0.1:8000/workflow/workflow-example'         -H 'accept: application/json'\n\n:param request:\n:type request:\n:param name: name of the workflow\n:type name: str\n:param job: name of the job\n:type job: str\n:param output: how to print workflow. can be html or table\n:type output: str\n:return: success or failure message\n:rtype:","operationId":"get_workflow_workflow__name__get","parameters":[{"required":true,"schema":{"title":"Name","type":"string"},"name":"name","in":"path"},{"required":false,"schema":{"title":"Job","type":"string"},"name":"job","in":"query"},{"required":false,"schema":{"title":"Output","type":"string"},"name":"output","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["workflow"],"summary":"Delete Workflow","description":"deletes the job in the specified workflow if specified.\nIf the job is not specified, it deletes entire workflow.\n\nexample curl:\nwe need to have first uploaded workflow-example for this curl to work!\ncurl -X 'DELETE'         'http://127.0.0.1:8000/workflow/workflow-example'         -H 'accept: application/json'\n:param name: name of the workflow\n:type name: str\n:param job: name of the job\n:type job: str\n:return: success or failure message","operationId":"delete_workflow_workflow__name__delete","parameters":[{"required":true,"schema":{"title":"Name","type":"string"},"name":"name","in":"path"},{"required":false,"schema":{"title":"Job","type":"string"},"name":"job","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/run/{name}":{"get":{"tags":["workflow"],"summary":"Run Workflow","description":"runs a specified workflow according to provided run type\n\nexample curl:\nwe need to have first uploaded workflow-example for this curl to work!\ncurl -X 'GET'         'http://127.0.0.1:8000/run/workflow-example?run_type=topo'         -H 'accept: application/json'\n\n:param request:\n:type request:\n:param name: name of workflow\n:type name: str\n:param run_type: type of run, either topo or parallel\n:type run_type: str\n:param redirect:\n:type redirect:\n:return: success or exception message\n:rtype:","operationId":"run_workflow_run__name__get","parameters":[{"required":true,"schema":{"title":"Name","type":"string"},"name":"name","in":"path"},{"required":false,"schema":{"title":"Run Type","type":"string","default":"topo"},"name":"run_type","in":"query"},{"required":false,"schema":{"title":"Redirect","type":"string"},"name":"redirect","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/workflow/job/{name_of_workflow}":{"get":{"tags":["workflow"],"summary":"Add Job","description":"This command adds a node to a workflow. with the specified arguments. A check\n            is returned and the user is alerted if arguments are missing\n            arguments are passed in ATTRIBUTE=VALUE fashion.\n            if the name of the workflow is omitted, the default workflow is used.\n            If no job name is specified, an automated number that is kept in the\n            config.yaml file will be used and the name will be job-n\n\nexample curl:\nwe need to have first uploaded workflow-example for this curl to work!\ncurl -X 'GET'         'http://127.0.0.1:8000/workflow/job/workflow-example?job=myCoolJob&user=CoolPerson&host=local&kind=local&status=ready&script=coolJob.sh&progress=0&label=CoolLabel'         -H 'accept: application/json'\n\n:param name_of_workflow: the name of the workflow\n:type name_of_workflow: str\n:param job: the specifications and characteristics of the job\n:type job: Jobpy\n:param user:\n:type user:\n:param host:\n:type host:\n:param kind:\n:type kind:\n:param status:\n:type status:\n:param script:\n:type script:\n:param exec:\n:type exec:\n:param progress:\n:type progress:\n:param label:\n:type label:\n:param parent:\n:type parent:\n:return: returns jobs within the specified workflow\n:rtype:","operationId":"add_job_add_job__name_of_workflow__get","parameters":[{"required":true,"schema":{"title":"Name Of Workflow","type":"string"},"name":"name_of_workflow","in":"path"},{"required":true,"schema":{"title":"Job","type":"string"},"name":"job","in":"query"},{"required":false,"schema":{"title":"User","type":"string"},"name":"user","in":"query"},{"required":false,"schema":{"title":"Host","type":"string"},"name":"host","in":"query"},{"required":false,"schema":{"title":"Kind","type":"string"},"name":"kind","in":"query"},{"required":false,"schema":{"title":"Status","type":"string"},"name":"status","in":"query"},{"required":false,"schema":{"title":"Script","type":"string"},"name":"script","in":"query"},{"required":false,"schema":{"title":"Exec","type":"string"},"name":"exec","in":"query"},{"required":false,"schema":{"title":"Progress","type":"string"},"name":"progress","in":"query"},{"required":false,"schema":{"title":"Label","type":"string"},"name":"label","in":"query"},{"required":false,"schema":{"title":"Parent","type":"string"},"name":"parent","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"anyOf":[{"type":"string"},{"type":"integer"}]}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}}}}}